[{"/Users/elroy/Desktop/appetizer_frontend/pages/_app.js":"1","/Users/elroy/Desktop/appetizer_frontend/pages/index.js":"2","/Users/elroy/Desktop/appetizer_frontend/pages/indexStyles.js":"3","/Users/elroy/Desktop/appetizer_frontend/pages/member.js":"4","/Users/elroy/Desktop/appetizer_frontend/pages/peek.js":"5","/Users/elroy/Desktop/appetizer_frontend/components/client/Navbar.js":"6","/Users/elroy/Desktop/appetizer_frontend/components/client/NavbarMember.js":"7","/Users/elroy/Desktop/appetizer_frontend/components/client/NavbarPeek.js":"8","/Users/elroy/Desktop/appetizer_frontend/src/App.js":"9","/Users/elroy/Desktop/appetizer_frontend/src/App.test.js":"10","/Users/elroy/Desktop/appetizer_frontend/src/index.js":"11","/Users/elroy/Desktop/appetizer_frontend/src/reportWebVitals.js":"12","/Users/elroy/Desktop/appetizer_frontend/src/setupTests.js":"13"},{"size":270,"mtime":1667232492164,"results":"14","hashOfConfig":"15"},{"size":8973,"mtime":1667270667191,"results":"16","hashOfConfig":"15"},{"size":289,"mtime":1667278254866,"results":"17","hashOfConfig":"15"},{"size":1284,"mtime":1667271764654,"results":"18","hashOfConfig":"15"},{"size":1507,"mtime":1667270669237,"results":"19","hashOfConfig":"15"},{"size":4463,"mtime":1667271766341,"results":"20","hashOfConfig":"15"},{"size":1753,"mtime":1667271760886,"results":"21","hashOfConfig":"15"},{"size":3318,"mtime":1667271762701,"results":"22","hashOfConfig":"15"},{"size":528,"mtime":1667232230896,"results":"23","hashOfConfig":"15"},{"size":246,"mtime":1667232230896,"results":"24","hashOfConfig":"15"},{"size":535,"mtime":1667232230897,"results":"25","hashOfConfig":"15"},{"size":362,"mtime":1667232230897,"results":"26","hashOfConfig":"15"},{"size":241,"mtime":1667232230898,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ptq3lj",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":19,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":21,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/elroy/Desktop/appetizer_frontend/pages/_app.js",[],[],"/Users/elroy/Desktop/appetizer_frontend/pages/index.js",["73","74","75","76"],[],"import {\n    Flex,\n    Text,\n    Button,\n    Heading,\n    Stack,\n    Input,\n    Textarea,\n    Divider,\n    Center,\n    Image\n} from \"@chakra-ui/react\";\nimport dynamic from \"next/dynamic\";\nimport { React, useState, useRef } from \"react\";\nimport { TypeAnimation } from \"react-type-animation\";\nimport HCaptcha from \"@hcaptcha/react-hcaptcha\";\nimport { FaLinkedin } from \"react-icons/fa\";\nimport { HiMapPin } from \"react-icons/hi2\";\nimport { IoMail } from \"react-icons/io5\";\n// import { BrowserRouter } from \"react-router-dom\";\n// import { HashLink } from \"react-router-hash-link\";\n//Public Imports\n\n//Component imports\nimport { HeroVideo } from \"./indexStyles\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nconst Navbar = dynamic(() => import(\"../components/client/Navbar\"));\nconst Hero = () => {\n    return (\n        <>\n            {/* <BrowserRouter> */}\n            <Flex\n                className=\"HeroPage\"\n                id=\"hero\"\n                flexDir=\"column\"\n                height=\"89vh\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n            >\n                <Flex px=\"lg\" height=\"20vh\">\n                    <TypeAnimation\n                        sequence={[\n                            \"Don't know what to do?\",\n                            3000,\n                            \"We produce ideas for you!\",\n                            3000,\n                            \"Get going now :)\",\n                            3000,\n                        ]}\n                        speed={40}\n                        wrapper=\"span\"\n                        cursor={true}\n                        repeat={Infinity}\n                        style={{ fontSize: \"5em\", color: \"#fff\", padding: \"lg\" }}\n                    />\n                </Flex>\n                <Flex>\n                    {/* <HashLink to=\"#signup\" smooth> */}\n                    <Button size=\"lg\" colorScheme=\"facebook\">\n                        Get started\n                    </Button>\n                    {/* </HashLink> */}\n                </Flex>\n            </Flex>\n            {/* </BrowserRouter> */}\n        </>\n    );\n};\n\n\nconst AboutUs = () => {\n    return (\n        <Flex\n            className=\"AboutUs\"\n            id=\"aboutus\"\n            padding=\"75px\"\n            flexDir=\"row\">\n            <Flex\n                flexDir=\"row\"\n                p=\"30px\"\n                borderRadius=\"25px\"\n                background=\"rgba(94,23,235,0.8)\">\n                <Flex\n                    color=\"#fff\"\n                    w=\"50%\"\n                    flexDir=\"column\">\n                    <Heading fontSize=\"4rem\">\n                        Providing you with latest ideas and trends.\n                    </Heading>\n                    <Flex\n                        flexDir=\"column\"\n                        color=\"#fff\"\n                        fontSize=\"1.1rem\"\n                        fontWeight=\"300\"\n                        paddingTop=\"1rem\" w=\"80%\">\n                        <Text>\n                            Millions of Businesses use data to make informed decisions, we aim\n                            to provide the information to you as easy as possible. - use GetGoing's search engine to create data-driven models better strategizing your\n                            business and make e-commerce easier.\n                        </Text>\n                    </Flex>\n                </Flex>\n                <Flex>\n                    <Image src=\"../\" />\n                </Flex>\n            </Flex>\n        </Flex>\n    );\n};\nconst SignUp = () => {\n    const [token, setToken] = useState(null);\n    const captchaRef = useRef(null);\n    return (\n        <Flex\n            className=\"Signup\"\n            id=\"signup\"\n            height=\"100vh\"\n            justifyContent=\"center\"\n            align=\"center\"\n        >\n            <Flex\n                borderRadius=\"25px\"\n                bgColor=\"#D84C61\"\n                boxShadow=\"5px 10px\"\n                flexDir=\"column\"\n                py=\"25px\"\n                px=\"40px\"\n            >\n                <Heading fontSize=\"2xl\" textAlign=\"center\" opacity=\"1.25\">\n                    Create Account\n                </Heading>\n                <Stack spacing={3} py=\"20px\">\n                    <Flex justify=\"space-between\">\n                        <Input\n                            placeholder=\"First Name\"\n                            size=\"md\"\n                            backgroundColor=\"#fff\"\n                            flexBasis=\"50%\"\n                        />\n                        <Input\n                            placeholder=\"Last Name\"\n                            size=\"md\"\n                            backgroundColor=\"#fff\"\n                            flexBasis=\"45%\"\n                        />\n                    </Flex>\n\n                    <Input placeholder=\"Last Name\" size=\"md\" backgroundColor=\"#fff\" />\n                    <Input placeholder=\"Email Address\" size=\"md\" backgroundColor=\"#fff\" />\n                    <Input\n                        placeholder=\"Create Password\"\n                        size=\"md\"\n                        backgroundColor=\"#fff\"\n                    />\n                    <Input\n                        placeholder=\"Confirm Password\"\n                        size=\"md\"\n                        backgroundColor=\"#fff\"\n                    />\n                    <HCaptcha\n                        w=\"500px\"\n                        sitekey={`${process.env.NEXT_PUBLIC_HCAPTCHA_SITEKEY}`}\n                        onVerify={setToken}\n                        onExpire={(e) => setToken(\"\")}\n                        ref={captchaRef}\n                    />\n                    <Button colorScheme=\"blackAlpha\" size=\"md\">\n                        Register\n                    </Button>\n                </Stack>\n            </Flex>\n        </Flex>\n    );\n};\nconst ContactUs = () => {\n    const [token, setToken] = useState(null);\n    const captchaRef = useRef(null);\n    return (\n        <Flex\n            className=\"ContactUs\"\n            id=\"contactus\"\n            height=\"89vh\"\n            justifyContent=\"center\"\n            align=\"center\"\n        >\n            <Flex\n                w=\"750px\"\n                borderRadius=\"25px\"\n                bgColor=\"#D84C61\"\n                boxShadow=\"5px 10px\"\n                flexDir=\"column\"\n                py=\"25px\"\n                px=\"40px\"\n            >\n                <Heading fontSize=\"2xl\" textAlign=\"center\">\n                    Any Questions? Get in touch!\n                </Heading>\n                <Flex>\n                    <Stack spacing={3} p=\"20px\" flexBasis=\"60%\">\n                        <Input placeholder=\"Full Name\" size=\"md\" backgroundColor=\"#fff\" />\n                        <Input placeholder=\"Email\" size=\"md\" backgroundColor=\"#fff\" />\n                        <Textarea\n                            placeholder=\"Message\"\n                            size=\"sm\"\n                            backgroundColor=\"#fff\"\n                        ></Textarea>\n                        <HCaptcha\n                            w=\"500px\"\n                            sitekey={`${process.env.NEXT_PUBLIC_HCAPTCHA_SITEKEY}`}\n                            onVerify={setToken}\n                            onExpire={(e) => setToken(\"\")}\n                            ref={captchaRef}\n                        />\n                        <Button colorScheme=\"blackAlpha\" size=\"md\">\n                            Register\n                        </Button>\n                    </Stack>\n                    <Center py=\"20px\" height=\"fill\">\n                        <Divider orientation=\"vertical\" />\n                    </Center>\n\n                    <Flex flexDir=\"column\" p=\"20px\" flexBasis=\"40%\">\n                        <Flex py=\"20px\">\n                            <HiMapPin size=\"1.5rem\" />\n                            <Heading px=\"5px\" fontSize=\"lg\">\n                                Singapore\n                            </Heading>\n                        </Flex>\n                        <Flex py=\"20px\">\n                            <IoMail size=\"1.5rem\" />\n                            <Heading px=\"5px\" fontSize=\"lg\">\n                                Email@hotmail.com\n                            </Heading>\n                        </Flex>\n                        <Flex py=\"20px\">\n                            <FaLinkedin size=\"1.5rem\" />\n                        </Flex>\n                    </Flex>\n                </Flex>\n            </Flex>\n        </Flex>\n    );\n};\nconst Home = () => {\n    return (\n        <Flex className=\"Layout Parent\" id=\"top\" minWidth=\"100%\" direction=\"column\">\n            <Flex width=\"100%\" flexDir=\"column\" className=\"Content Parent\">\n                <HeroVideo src=\"./hero.mp4\" autoPlay loop muted />\n                <Navbar />\n                <Hero />\n                <AboutUs/>\n                <SignUp />\n                <ContactUs />\n            </Flex>\n        </Flex>\n    );\n};\n\nexport default Home;\n","/Users/elroy/Desktop/appetizer_frontend/pages/indexStyles.js",[],[],"/Users/elroy/Desktop/appetizer_frontend/pages/member.js",["77","78","79","80","81","82","83","84","85","86","87","88","89","90"],[],"import {\n  Flex,\n  Text,\n  Button,\n  Heading,\n  Stack,\n  Input,\n  Textarea,\n  Divider,\n  Center,\n  Image,\n} from \"@chakra-ui/react\";\nimport dynamic from \"next/dynamic\";\nimport { React, useState, useRef } from \"react\";\n// import { BrowserRouter } from \"react-router-dom\";\n// import { HashLink } from \"react-router-hash-link\";\n//Public Imports\n\n//Component imports\nimport { HeroVideo } from \"./indexStyles\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nconst NavbarMember = dynamic(() => import(\"../components/client/NavbarMember\"));\nconst HeroPeek = () => {\n  return (\n    <>\n      {/* <BrowserRouter> */}\n      <Flex\n        className=\"HeroPage\"\n        id=\"hero\"\n        flexDir=\"row\"\n        height=\"89vh\">\n        <Flex\n          px=\"lg\"\n          flexBasis=\"25%\"\n          className=\"left\"></Flex>\n        <Flex\n          flexBasis=\"75%\"\n          className=\"right\"></Flex>\n      </Flex>\n    </>\n  );\n};\nconst Member = () => {\n  return (\n    <Flex\n      className=\"Layout Parent\"\n      id=\"top\"\n      minWidth=\"100%\"\n      direction=\"column\">\n      <Flex\n        width=\"100%\"\n        flexDir=\"column\"\n        className=\"Content Parent\"\n        bgColor=\"#0A1639\">\n        <NavbarMember />\n        <HeroPeek />\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Member;\n","/Users/elroy/Desktop/appetizer_frontend/pages/peek.js",["91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109"],[],"import {\n  Flex,\n  Text,\n  Button,\n  Heading,\n  Stack,\n  Input,\n  Textarea,\n  Divider,\n  Center,\n  Image,\n} from \"@chakra-ui/react\";\nimport dynamic from \"next/dynamic\";\nimport { React, useState, useRef } from \"react\";\nimport { TypeAnimation } from \"react-type-animation\";\nimport HCaptcha from \"@hcaptcha/react-hcaptcha\";\nimport { FaLinkedin } from \"react-icons/fa\";\nimport { HiMapPin } from \"react-icons/hi2\";\nimport { IoMail } from \"react-icons/io5\";\n// import { BrowserRouter } from \"react-router-dom\";\n// import { HashLink } from \"react-router-hash-link\";\n//Public Imports\n\n//Component imports\nimport { HeroVideo } from \"./indexStyles\";\nimport { Navigate, useNavigate } from \"react-router-dom\";\nconst NavbarPeek = dynamic(() => import(\"../components/client/NavbarPeek\"));\nconst HeroPeek = () => {\n  return (\n    <>\n      {/* <BrowserRouter> */}\n      <Flex\n        className=\"HeroPage\"\n        id=\"hero\"\n        flexDir=\"row\"\n        height=\"89vh\"\n        >\n        <Flex\n          px=\"lg\"\n          flexBasis=\"25%\" className=\"left\">\n\n        </Flex>\n        <Flex flexBasis=\"75%\" className = \"right\">\n        </Flex>\n      </Flex>\n\n    </>\n  );\n};\nconst Peek = () => {\n  return (\n    <Flex\n      className=\"Layout Parent\"\n      id=\"top\"\n      minWidth=\"100%\"\n      direction=\"column\">\n      <Flex\n        width=\"100%\"\n        flexDir=\"column\"\n        className=\"Content Parent\"\n        bgColor=\"#0A1639\">\n        <NavbarPeek/>\n        <HeroPeek/>\n      </Flex>\n    </Flex>\n  );\n};\n\nexport default Peek;\n","/Users/elroy/Desktop/appetizer_frontend/components/client/Navbar.js",["110","111","112","113","114"],[],"import React, { useState, Component, useRef } from \"react\";\n//import dynamic from \"next/dynamic\";\nimport {\n  Flex,\n  Button,\n  Text,\n  Heading,\n  Link,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Input,\n  useDisclosure,\n} from \"@chakra-ui/react\";\n\nimport { HashLink } from \"react-router-hash-link\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useRouter } from \"next/router\";\nconst Nav = () => {\n  const MenuItem = ({ children, isLast, to = \"/\", ...rest }) => {\n    return (\n      <Flex {...rest}>\n        {/* <HashLink to={to} smooth> */}\n          <Flex p=\"1.25rem\" variant=\"ghost\" fontSize=\"lg\" fontWeight=\"500\" >\n            <Text color=\"#fff\" display=\"flex\">\n              {children}\n            </Text>\n          </Flex>\n        {/* </HashLink> */}\n      </Flex>\n    );\n  };\n  const router = useRouter();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const initialRef = React.useRef(null);\n  const finalRef = React.useRef(null);\n  return (\n    <>\n      {/* <BrowserRouter> */}\n      <Flex\n        className=\"nav\"\n        align=\"center\"\n        w=\"100%\"\n        height=\"11vh\"\n        position=\"sticky\"\n        justify=\"space-around\"\n        top=\"0\"\n        zIndex=\"50\"\n        background=\"rgba(10,22,57,0.7)\">\n        <Link\n          onClick={() => {\n            router.push(\"/\");\n          }}>\n          <Flex id=\"StickyLogo\">\n            <Heading\n              fontSize=\"2rem\"\n              fontWeight=\"800\"\n              color=\"#fff\">\n              Getgoing_\n            </Heading>\n          </Flex>\n        </Link>\n\n        <Flex\n          className=\"NavComponents\"\n          align=\"left\"\n          flexBasis=\"auto\">\n          <Flex\n            align=\"center\"\n            justify=\"flex-end\"\n            position=\"relative\">\n            <MenuItem\n              position=\"relative\"\n              to=\"#top\">\n              Home\n            </MenuItem>\n            <MenuItem\n              position=\"relative\"\n              to=\"#aboutus\">\n              About Us\n            </MenuItem>\n            <MenuItem\n              position=\"relative\"\n              to=\"#signup\">\n              Sign Up\n            </MenuItem>\n            <MenuItem\n              position=\"relative\"\n              to=\"#contactus\">\n              Contact Us\n            </MenuItem>\n          </Flex>\n        </Flex>\n        <Flex\n          className=\"NavComponents2\"\n          align=\"left\">\n          <Flex p=\"1.25rem\">\n            <Link\n              onClick={() => {\n                router.push(\"/peek\");\n              }}>\n              <Button\n                size=\"md\"\n                colorScheme=\"blackAlpha\">\n                Take a Peek\n              </Button>\n            </Link>\n          </Flex>\n          <Flex p=\"1.25rem\">\n            <Button\n              size=\"md\"\n              colorScheme=\"blackAlpha\"\n              onClick={onOpen}>\n              Sign In\n            </Button>\n            <Modal\n              initialFocusRef={initialRef}\n              finalFocusRef={finalRef}\n              isOpen={isOpen}\n              onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Sign in</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody pb={6}>\n                  <FormControl>\n                    <FormLabel>Email</FormLabel>\n                    <Input\n                      ref={initialRef}\n                      placeholder=\"Email\"\n                    />\n                  </FormControl>\n                  <FormControl mt={4}>\n                    <FormLabel>Password</FormLabel>\n                    <Input\n                      placeholder=\"Password\"\n                      type=\"password\"\n                    />\n                  </FormControl>\n                </ModalBody>\n                <ModalFooter>\n                  <Link\n                    onClick={() => {\n                      router.push(\"/member\");\n                    }}>\n                    <Button\n                      colorScheme=\"blue\"\n                      mr={3}>\n                      Sign In\n                    </Button>\n                  </Link>\n                  <Button onClick={onClose}>Cancel</Button>\n                </ModalFooter>\n              </ModalContent>\n            </Modal>\n          </Flex>\n        </Flex>\n      </Flex>\n      {/* </BrowserRouter> */}\n    </>\n  );\n};\n\nexport default Nav;\n","/Users/elroy/Desktop/appetizer_frontend/components/client/NavbarMember.js",["115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135"],[],"import React, { useState, Component, useRef } from \"react\";\n//import dynamic from \"next/dynamic\";\nimport {\n  Flex,\n  Button,\n  Text,\n  Heading,\n  Link,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Input,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useRouter } from \"next/router\";\nconst Nav = () => {\n  const router = useRouter();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const initialRef = React.useRef(null);\n  const finalRef = React.useRef(null);\n  return (\n    <>\n      {/* <BrowserRouter> */}\n      <Flex\n        className=\"nav\"\n        align=\"center\"\n        w=\"100%\"\n        height=\"11vh\"\n        position=\"sticky\"\n        justify=\"space-between\"\n        top=\"0\"\n        zIndex=\"50\"\n        background=\"rgba(10,22,57,0.7)\"\n        px=\"70px\">\n        <Link\n          onClick={() => {\n            router.push(\"/\");\n          }}>\n          <Flex id=\"StickyLogo\">\n            <Heading\n              fontSize=\"2rem\"\n              fontWeight=\"800\"\n              color=\"#fff\">\n              Getgoing_\n            </Heading>\n          </Flex>\n        </Link>\n\n        <Flex\n          className=\"NavComponents2\"\n          align=\"left\">\n          <Flex p=\"1.25rem\">\n            <Link\n              onClick={() => {\n                router.push(\"/\");\n              }}>\n              <Button\n                size=\"md\"\n                colorScheme=\"blackAlpha\">\n                Sign Out\n              </Button>\n            </Link>\n          </Flex>\n        </Flex>\n      </Flex>\n      {/* </BrowserRouter> */}\n    </>\n  );\n};\n\nexport default Nav;\n","/Users/elroy/Desktop/appetizer_frontend/components/client/NavbarPeek.js",["136","137","138","139","140","141"],[],"import React, { useState, Component, useRef } from \"react\";\n//import dynamic from \"next/dynamic\";\nimport {\n  Flex,\n  Button,\n  Text,\n  Heading,\n  Link,\n  Modal,\n  ModalBody,\n  ModalFooter,\n  ModalOverlay,\n  ModalContent,\n  ModalHeader,\n  ModalCloseButton,\n  FormControl,\n  FormLabel,\n  Input,\n  useDisclosure,\n} from \"@chakra-ui/react\";\nimport { HashLink } from \"react-router-hash-link\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { useRouter } from \"next/router\";\nconst Nav = () => {\n  const router = useRouter();\n  const { isOpen, onOpen, onClose } = useDisclosure();\n  const initialRef = React.useRef(null);\n  const finalRef = React.useRef(null);\n  return (\n    <>\n      {/* <BrowserRouter> */}\n      <Flex\n        className=\"nav\"\n        align=\"center\"\n        w=\"100%\"\n        height=\"11vh\"\n        position=\"sticky\"\n        justify=\"space-between\"\n        top=\"0\"\n        zIndex=\"50\"\n        background=\"rgba(10,22,57,0.7)\"\n        px=\"70px\">\n        <Link\n          onClick={() => {\n            router.push(\"/\");\n          }}>\n          <Flex id=\"StickyLogo\">\n            <Heading\n              fontSize=\"2rem\"\n              fontWeight=\"800\"\n              color=\"#fff\">\n              Getgoing_\n            </Heading>\n          </Flex>\n        </Link>\n\n        <Flex\n          className=\"NavComponents2\"\n          align=\"left\">\n          <Flex p=\"1.25rem\">\n            <Link\n              onClick={() => {\n                router.push(\"/peek\");\n              }}>\n              <Button\n                size=\"md\"\n                colorScheme=\"blackAlpha\">\n                Take a Peek\n              </Button>\n            </Link>\n          </Flex>\n          <Flex p=\"1.25rem\">\n            <Button\n              size=\"md\"\n              colorScheme=\"blackAlpha\" onClick={onOpen}>\n              Sign In\n            </Button>\n            <Modal\n              initialFocusRef={initialRef}\n              finalFocusRef={finalRef}\n              isOpen={isOpen}\n              onClose={onClose}>\n              <ModalOverlay />\n              <ModalContent>\n                <ModalHeader>Sign in</ModalHeader>\n                <ModalCloseButton />\n                <ModalBody pb={6}>\n                  <FormControl>\n                    <FormLabel>Email</FormLabel>\n                    <Input\n                      ref={initialRef}\n                      placeholder=\"Email\"\n                    />\n                  </FormControl>\n                  <FormControl mt={4}>\n                    <FormLabel>Password</FormLabel>\n                    <Input\n                      placeholder=\"Password\"\n                      type=\"password\"\n                    />\n                  </FormControl>\n                </ModalBody>\n                <ModalFooter>\n                  <Link\n                    onClick={() => {\n                      router.push(\"/member\");\n                    }}>\n                    <Button\n                      colorScheme=\"blue\"\n                      mr={3}>\n                      Sign In\n                    </Button>\n                  </Link>\n                  <Button onClick={onClose}>Cancel</Button>\n                </ModalFooter>\n              </ModalContent>\n            </Modal>\n          </Flex>\n        </Flex>\n      </Flex>\n      {/* </BrowserRouter> */}\n    </>\n  );\n};\n\nexport default Nav;\n","/Users/elroy/Desktop/appetizer_frontend/src/App.js",[],[],"/Users/elroy/Desktop/appetizer_frontend/src/App.test.js",[],[],"/Users/elroy/Desktop/appetizer_frontend/src/index.js",[],[],"/Users/elroy/Desktop/appetizer_frontend/src/reportWebVitals.js",[],[],"/Users/elroy/Desktop/appetizer_frontend/src/setupTests.js",[],[],{"ruleId":"142","severity":1,"message":"143","line":26,"column":10,"nodeType":"144","messageId":"145","endLine":26,"endColumn":18},{"ruleId":"142","severity":1,"message":"146","line":26,"column":20,"nodeType":"144","messageId":"145","endLine":26,"endColumn":31},{"ruleId":"142","severity":1,"message":"147","line":111,"column":12,"nodeType":"144","messageId":"145","endLine":111,"endColumn":17},{"ruleId":"142","severity":1,"message":"147","line":176,"column":12,"nodeType":"144","messageId":"145","endLine":176,"endColumn":17},{"ruleId":"142","severity":1,"message":"148","line":3,"column":3,"nodeType":"144","messageId":"145","endLine":3,"endColumn":7},{"ruleId":"142","severity":1,"message":"149","line":4,"column":3,"nodeType":"144","messageId":"145","endLine":4,"endColumn":9},{"ruleId":"142","severity":1,"message":"150","line":5,"column":3,"nodeType":"144","messageId":"145","endLine":5,"endColumn":10},{"ruleId":"142","severity":1,"message":"151","line":6,"column":3,"nodeType":"144","messageId":"145","endLine":6,"endColumn":8},{"ruleId":"142","severity":1,"message":"152","line":7,"column":3,"nodeType":"144","messageId":"145","endLine":7,"endColumn":8},{"ruleId":"142","severity":1,"message":"153","line":8,"column":3,"nodeType":"144","messageId":"145","endLine":8,"endColumn":11},{"ruleId":"142","severity":1,"message":"154","line":9,"column":3,"nodeType":"144","messageId":"145","endLine":9,"endColumn":10},{"ruleId":"142","severity":1,"message":"155","line":10,"column":3,"nodeType":"144","messageId":"145","endLine":10,"endColumn":9},{"ruleId":"142","severity":1,"message":"156","line":11,"column":3,"nodeType":"144","messageId":"145","endLine":11,"endColumn":8},{"ruleId":"142","severity":1,"message":"157","line":14,"column":17,"nodeType":"144","messageId":"145","endLine":14,"endColumn":25},{"ruleId":"142","severity":1,"message":"158","line":14,"column":27,"nodeType":"144","messageId":"145","endLine":14,"endColumn":33},{"ruleId":"142","severity":1,"message":"159","line":20,"column":10,"nodeType":"144","messageId":"145","endLine":20,"endColumn":19},{"ruleId":"142","severity":1,"message":"143","line":21,"column":10,"nodeType":"144","messageId":"145","endLine":21,"endColumn":18},{"ruleId":"142","severity":1,"message":"146","line":21,"column":20,"nodeType":"144","messageId":"145","endLine":21,"endColumn":31},{"ruleId":"142","severity":1,"message":"148","line":3,"column":3,"nodeType":"144","messageId":"145","endLine":3,"endColumn":7},{"ruleId":"142","severity":1,"message":"149","line":4,"column":3,"nodeType":"144","messageId":"145","endLine":4,"endColumn":9},{"ruleId":"142","severity":1,"message":"150","line":5,"column":3,"nodeType":"144","messageId":"145","endLine":5,"endColumn":10},{"ruleId":"142","severity":1,"message":"151","line":6,"column":3,"nodeType":"144","messageId":"145","endLine":6,"endColumn":8},{"ruleId":"142","severity":1,"message":"152","line":7,"column":3,"nodeType":"144","messageId":"145","endLine":7,"endColumn":8},{"ruleId":"142","severity":1,"message":"153","line":8,"column":3,"nodeType":"144","messageId":"145","endLine":8,"endColumn":11},{"ruleId":"142","severity":1,"message":"154","line":9,"column":3,"nodeType":"144","messageId":"145","endLine":9,"endColumn":10},{"ruleId":"142","severity":1,"message":"155","line":10,"column":3,"nodeType":"144","messageId":"145","endLine":10,"endColumn":9},{"ruleId":"142","severity":1,"message":"156","line":11,"column":3,"nodeType":"144","messageId":"145","endLine":11,"endColumn":8},{"ruleId":"142","severity":1,"message":"157","line":14,"column":17,"nodeType":"144","messageId":"145","endLine":14,"endColumn":25},{"ruleId":"142","severity":1,"message":"158","line":14,"column":27,"nodeType":"144","messageId":"145","endLine":14,"endColumn":33},{"ruleId":"142","severity":1,"message":"160","line":15,"column":10,"nodeType":"144","messageId":"145","endLine":15,"endColumn":23},{"ruleId":"142","severity":1,"message":"161","line":16,"column":8,"nodeType":"144","messageId":"145","endLine":16,"endColumn":16},{"ruleId":"142","severity":1,"message":"162","line":17,"column":10,"nodeType":"144","messageId":"145","endLine":17,"endColumn":20},{"ruleId":"142","severity":1,"message":"163","line":18,"column":10,"nodeType":"144","messageId":"145","endLine":18,"endColumn":18},{"ruleId":"142","severity":1,"message":"164","line":19,"column":10,"nodeType":"144","messageId":"145","endLine":19,"endColumn":16},{"ruleId":"142","severity":1,"message":"159","line":25,"column":10,"nodeType":"144","messageId":"145","endLine":25,"endColumn":19},{"ruleId":"142","severity":1,"message":"143","line":26,"column":10,"nodeType":"144","messageId":"145","endLine":26,"endColumn":18},{"ruleId":"142","severity":1,"message":"146","line":26,"column":20,"nodeType":"144","messageId":"145","endLine":26,"endColumn":31},{"ruleId":"142","severity":1,"message":"157","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"165","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"158","line":1,"column":38,"nodeType":"144","messageId":"145","endLine":1,"endColumn":44},{"ruleId":"142","severity":1,"message":"166","line":22,"column":10,"nodeType":"144","messageId":"145","endLine":22,"endColumn":18},{"ruleId":"142","severity":1,"message":"167","line":23,"column":10,"nodeType":"144","messageId":"145","endLine":23,"endColumn":23},{"ruleId":"142","severity":1,"message":"157","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"165","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"158","line":1,"column":38,"nodeType":"144","messageId":"145","endLine":1,"endColumn":44},{"ruleId":"142","severity":1,"message":"148","line":6,"column":3,"nodeType":"144","messageId":"145","endLine":6,"endColumn":7},{"ruleId":"142","severity":1,"message":"168","line":9,"column":3,"nodeType":"144","messageId":"145","endLine":9,"endColumn":8},{"ruleId":"142","severity":1,"message":"169","line":10,"column":3,"nodeType":"144","messageId":"145","endLine":10,"endColumn":12},{"ruleId":"142","severity":1,"message":"170","line":11,"column":3,"nodeType":"144","messageId":"145","endLine":11,"endColumn":14},{"ruleId":"142","severity":1,"message":"171","line":12,"column":3,"nodeType":"144","messageId":"145","endLine":12,"endColumn":15},{"ruleId":"142","severity":1,"message":"172","line":13,"column":3,"nodeType":"144","messageId":"145","endLine":13,"endColumn":15},{"ruleId":"142","severity":1,"message":"173","line":14,"column":3,"nodeType":"144","messageId":"145","endLine":14,"endColumn":14},{"ruleId":"142","severity":1,"message":"174","line":15,"column":3,"nodeType":"144","messageId":"145","endLine":15,"endColumn":19},{"ruleId":"142","severity":1,"message":"175","line":16,"column":3,"nodeType":"144","messageId":"145","endLine":16,"endColumn":14},{"ruleId":"142","severity":1,"message":"176","line":17,"column":3,"nodeType":"144","messageId":"145","endLine":17,"endColumn":12},{"ruleId":"142","severity":1,"message":"152","line":18,"column":3,"nodeType":"144","messageId":"145","endLine":18,"endColumn":8},{"ruleId":"142","severity":1,"message":"166","line":21,"column":10,"nodeType":"144","messageId":"145","endLine":21,"endColumn":18},{"ruleId":"142","severity":1,"message":"167","line":22,"column":10,"nodeType":"144","messageId":"145","endLine":22,"endColumn":23},{"ruleId":"142","severity":1,"message":"177","line":26,"column":11,"nodeType":"144","messageId":"145","endLine":26,"endColumn":17},{"ruleId":"142","severity":1,"message":"178","line":26,"column":19,"nodeType":"144","messageId":"145","endLine":26,"endColumn":25},{"ruleId":"142","severity":1,"message":"179","line":26,"column":27,"nodeType":"144","messageId":"145","endLine":26,"endColumn":34},{"ruleId":"142","severity":1,"message":"180","line":27,"column":9,"nodeType":"144","messageId":"145","endLine":27,"endColumn":19},{"ruleId":"142","severity":1,"message":"181","line":28,"column":9,"nodeType":"144","messageId":"145","endLine":28,"endColumn":17},{"ruleId":"142","severity":1,"message":"157","line":1,"column":17,"nodeType":"144","messageId":"145","endLine":1,"endColumn":25},{"ruleId":"142","severity":1,"message":"165","line":1,"column":27,"nodeType":"144","messageId":"145","endLine":1,"endColumn":36},{"ruleId":"142","severity":1,"message":"158","line":1,"column":38,"nodeType":"144","messageId":"145","endLine":1,"endColumn":44},{"ruleId":"142","severity":1,"message":"148","line":6,"column":3,"nodeType":"144","messageId":"145","endLine":6,"endColumn":7},{"ruleId":"142","severity":1,"message":"166","line":21,"column":10,"nodeType":"144","messageId":"145","endLine":21,"endColumn":18},{"ruleId":"142","severity":1,"message":"167","line":22,"column":10,"nodeType":"144","messageId":"145","endLine":22,"endColumn":23},"no-unused-vars","'Navigate' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'token' is assigned a value but never used.","'Text' is defined but never used.","'Button' is defined but never used.","'Heading' is defined but never used.","'Stack' is defined but never used.","'Input' is defined but never used.","'Textarea' is defined but never used.","'Divider' is defined but never used.","'Center' is defined but never used.","'Image' is defined but never used.","'useState' is defined but never used.","'useRef' is defined but never used.","'HeroVideo' is defined but never used.","'TypeAnimation' is defined but never used.","'HCaptcha' is defined but never used.","'FaLinkedin' is defined but never used.","'HiMapPin' is defined but never used.","'IoMail' is defined but never used.","'Component' is defined but never used.","'HashLink' is defined but never used.","'BrowserRouter' is defined but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'ModalOverlay' is defined but never used.","'ModalContent' is defined but never used.","'ModalHeader' is defined but never used.","'ModalCloseButton' is defined but never used.","'FormControl' is defined but never used.","'FormLabel' is defined but never used.","'isOpen' is assigned a value but never used.","'onOpen' is assigned a value but never used.","'onClose' is assigned a value but never used.","'initialRef' is assigned a value but never used.","'finalRef' is assigned a value but never used."]